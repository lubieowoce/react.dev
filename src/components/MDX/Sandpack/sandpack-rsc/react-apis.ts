const SERVER_ONLY = {client: undefined, server: 'supported'};
const CLIENT_ONLY = {client: 'supported', server: undefined};
const UNIVERSAL = {server: 'supported', client: 'supported'};
const CLIENT_WITH_SERVER_NOOP = {server: 'noop', client: 'supported'};

// massaged output of `scripts/react-exports`
const REACT_APIS = {
  react: {
    Children: UNIVERSAL,
    Fragment: UNIVERSAL,
    Profiler: CLIENT_WITH_SERVER_NOOP,
    StrictMode: CLIENT_WITH_SERVER_NOOP,
    Suspense: UNIVERSAL,
    SuspenseList: UNIVERSAL,
    cache: SERVER_ONLY,
    cloneElement: UNIVERSAL,
    createElement: UNIVERSAL,
    createRef: CLIENT_WITH_SERVER_NOOP,
    createServerContext: UNIVERSAL,
    isValidElement: UNIVERSAL,
    forwardRef: CLIENT_WITH_SERVER_NOOP,
    lazy: CLIENT_WITH_SERVER_NOOP,
    memo: CLIENT_WITH_SERVER_NOOP,
    startTransition: CLIENT_WITH_SERVER_NOOP,
    // unstable_DebugTracingMode: UNIVERSAL,
    // unstable_getCacheForType: UNIVERSAL,
    // unstable_getCacheSignal: UNIVERSAL,
    use: UNIVERSAL,
    useCallback: UNIVERSAL,
    useContext: CLIENT_ONLY,
    useDebugValue: UNIVERSAL,
    useId: UNIVERSAL,
    useMemo: CLIENT_WITH_SERVER_NOOP,
    version: UNIVERSAL,
    Component: CLIENT_ONLY,
    PureComponent: CLIENT_ONLY,
    createContext: CLIENT_ONLY,
    createFactory: CLIENT_ONLY,
    experimental_useEffectEvent: CLIENT_ONLY,
    experimental_useOptimistic: CLIENT_ONLY,
    unstable_Cache: CLIENT_ONLY,
    unstable_Offscreen: CLIENT_ONLY,
    unstable_act: CLIENT_ONLY,
    unstable_useCacheRefresh: CLIENT_ONLY,
    unstable_useMemoCache: CLIENT_ONLY,
    useDeferredValue: CLIENT_ONLY,
    useEffect: CLIENT_ONLY,
    useImperativeHandle: CLIENT_ONLY,
    useInsertionEffect: CLIENT_ONLY,
    useLayoutEffect: CLIENT_ONLY,
    useReducer: CLIENT_ONLY,
    useRef: CLIENT_ONLY,
    useState: CLIENT_ONLY,
    useSyncExternalStore: CLIENT_ONLY,
    useTransition: CLIENT_ONLY,
    useActionState: CLIENT_ONLY,
    experimental_useActionState: CLIENT_ONLY,
  },
  'react-dom': {
    createPortal: CLIENT_ONLY,
    createRoot: CLIENT_ONLY,
    experimental_useFormStatus: CLIENT_ONLY,
    findDOMNode: CLIENT_ONLY,
    flushSync: CLIENT_ONLY,
    hydrate: CLIENT_ONLY,
    hydrateRoot: CLIENT_ONLY,
    preconnect: UNIVERSAL,
    prefetchDNS: UNIVERSAL,
    preinit: UNIVERSAL,
    preload: UNIVERSAL,
    render: CLIENT_ONLY,
    unmountComponentAtNode: CLIENT_ONLY,
    unstable_batchedUpdates: CLIENT_ONLY,
    unstable_renderSubtreeIntoContainer: CLIENT_ONLY,
    unstable_runWithPriority: CLIENT_ONLY,
    version: UNIVERSAL,
    useFormState: CLIENT_ONLY,
    experimental_useFormState: CLIENT_ONLY,
    useFormStatus: CLIENT_ONLY,
  },
  'react-dom/client': {'*': CLIENT_ONLY},
  // TODO: sort these out
  // 'react-dom/server': {'*': CLIENT_ONLY},
};

export default REACT_APIS;
